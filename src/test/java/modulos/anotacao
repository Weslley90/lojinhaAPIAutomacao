Há convensão no JUnit para adicionar a palavra "Test" ao final das classes que contém testes.
Todo método de teste começa com a palavra "test".
//Os atributos não tem parenteses na frente
//O "import static" serve para facilitar a escrita do código, ao invés de digitar "RestAssured." algum atributo ou método nos apenas digitamos o método ou atributos
//Nós usamos o "port" para colocar a porta de conecxão da API.
//O Rest Assurence é biblioteca para chamar uma API Rest Assurance


Notações
@DisplayName() Essa notação dá um nome para os testes dessa classe.
@Test() Essa notação permite que seja executados testes na classe.

Atributos Rest assuranced
baseURI = Esse é um atributo do Rest Assurenced que irá receber a URI do endpoint.
basePath = Esse é um atributo do Rest Assuranced que irá receber o path do endpoint.

Métodos Rest Assuranced
given() ele básicamente passa as informações obrigatórias para fazer uma requisição.
    .contentType() Recebe como parâmmetro o tipo de informação contida.
    .body() Recebe como parâmetro o corpo de requisição em formato "String".
    .header() Recebe como parâmetros os valores do hearder
.when()
    .post() Recebe como parâmetro a URL do endpoint
then()
    .extract() Extrai alguma informação.
    .path() No path nos pegamos uma informação do corpo de requisição.
    .assertThat() Afirme que...
    .body("", equalTo("")) O Atributo "x" possui o texto igual a valor "Y".
     .statusCode(422); O status code é igual a código "x".




String token = given()
                .contentType(ContentType.JSON)
                .body("{\n" +
                        "  \"usuarioLogin\": \"weslleyNovo\",\n" +
                        "  \"usuarioSenha\": \"cebolinhaemonica\"\n" +
                        "}")
                .when()
                .post("/v2/login")
                .then()
                .extract()
                .path("data.token");
        System.out.println(token);

Primeiramente criamos uma váriavel chamada de token;
Essa variável recebe o resultado de todo o código abaixo;
O código acima não é um teste ele uma requisisão para pegar o token.
Dado que (given)
O contentType contém JSON
O Body da requisição é o que está escrito entre parentêses.
Quando (when)
Aqui colocamos o verbo de requisiçã que nesse caso é o post no qual irá receber um parâmetro do tipo string que será a URL que faz a requisição
Então (then)
Aqui iremos falar o proposito do pq isso está sendo feito
Nesse caso é extaria do path
O valor que está em token dentro de data
Nessa caso a variável "token" recebe o resultado da requisição que é um token



given()
                .contentType(ContentType.JSON)
                 .header("token", token)
                .body("{\n" +
                        "  \"produtoNome\": \"Xbox Series S\",\n" +
                        "  \"produtoValor\": 0.00,\n" +
                        "  \"produtoCores\": [\n" +
                        "    \"Preto\", \"Branco\"\n" +
                        "  ],\n" +
                        "  \"produtoUrlMock\": \"\",\n" +
                        "  \"componentes\": [\n" +
                        "    {\n" +
                        "      \"componenteNome\": \"Controle\",\n" +
                        "      \"componenteQuantidade\": 1\n" +
                        "    },\n" +
                        "    {\n" +
                        "      \"componenteNome\": \"Cabo HDMI\",\n" +
                        "      \"componenteQuantidade\": 1\n" +
                        "    }\n" +
                        "  ]\n" +
                        "}")
         .when()
                .post("/v2/produtos")
         .then()
                 .assertThat()
                 .body("error", equalTo("O valor do produto deve estar entre R$ 0,01 e R$ 7.000,00"))
                 .statusCode(422);



Dado que (given)
Aqui não precisamos criar uma variável como inicialmente como pensei, pois, iremos pegar o conteúdo do body para validado apenas
O contentType seja do tipo JSON
E o heder recebe o valor token do primeira parte do código.
E recebe o body com esse valores
Quando (when)
Fizer uma requisição do tipo post usando essa URL
Então (Then)
Afirme que (AssertThat)
No body da resposta o atributo "error" nos temos a seguinteme mensagem
E o seguinte Status code




